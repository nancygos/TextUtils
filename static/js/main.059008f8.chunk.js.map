{"version":3,"sources":["components/Navbar.js","components/About.js","components/Contact.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","id","to","onClick","s","document","getElementById","style","visibility","display","padding","backgroundColor","textAlign","position","left","width","About","onInit","typewriter","typeString","pauseFor","deleteAll","start","submit","nameInput","emailInput","txt","value","alert","Contact","action","type","placeholder","name","rows","Home","useState","words","setWords","cols","onChange","event","target","num","trim","split","length","c","JSON","parse","speed","querySelector","time","innerHTML","newWord","toUpperCase","toLowerCase","i","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.059008f8.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction NavBar() {\r\n\r\n    const show = () => {\r\n        // console.log(\"show\");\r\n        let s = document.getElementById(\"lists\");\r\n        // s.classList.toggle(\"change\");\r\n        if (s.style.visibility === \"hidden\") {\r\n            s.style.visibility = \"visible\";\r\n            s.style.display = \"inline-block\";\r\n            s.style.padding = \"5px\";\r\n            s.style.backgroundColor = \"transparent\";\r\n            // s.style.backgroundColor = \"white\";\r\n            // s.style.margin = \"15px\";\r\n            s.style.textAlign = \"right\";\r\n            s.style.position=\"relative\";\r\n            s.style.left=\"7%\";\r\n            s.style.width=\"77px\";\r\n        }\r\n        else {\r\n            s.style.visibility = \"hidden\";\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <nav className=\"wrapper\">\r\n                <div className=\"container\">\r\n\r\n                    <h3 className=\"logo\">TextUtils</h3>\r\n\r\n                    <div className=\"lists\" id=\"lists\">\r\n\r\n                        <ul>\r\n                            <li><NavLink to=\"/\" id=\"link\">Home</NavLink></li>\r\n                            <li><NavLink to=\"/about\" id=\"link\">About</NavLink></li>\r\n                            <li><NavLink to=\"/contact\" id=\"link\">Contact</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n            </nav>\r\n\r\n           \r\n            \r\n            <div className=\"burger\" onClick={show}>               {/* onClick={show} */}\r\n                <div className=\"line1 line\"></div>\r\n                <div className=\"line2 line\"></div>\r\n                <div className=\"line3 line\"></div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react';\r\nimport Typewriter from 'typewriter-effect';\r\n\r\nfunction About() {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"aboutME\">\r\n                <h1 className=\"heading\" >\r\n                    <Typewriter\r\n\r\n                        onInit={(typewriter) => {\r\n\r\n                            typewriter\r\n\r\n                                .typeString(\"Hi...\")\r\n\r\n                                .pauseFor(500)\r\n                                .deleteAll()\r\n                                .typeString(\"My name is Nancy Goswami\")\r\n                                .pauseFor(500)\r\n                                .deleteAll()\r\n                                .typeString(\"I am a web developer\")\r\n                                .start();\r\n                        }}\r\n                    />\r\n                </h1>\r\n\r\n                <div className=\"content\">\r\n                    <ul>\r\n                        <li> TextUtils helps in altering user data conveniently. User can change the case of their text, count the number of words and letters in their text.</li>\r\n                        <li> This website is made using REACT JS , jsx , HTML and CSS. </li>\r\n                        <li> In formation of the logic useState hook has been used. </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div className=\"contactPage\">\r\n            <h1>Contact Us!</h1>\r\n            <div className=\"required\"> <span className=\"star\">*</span> Fill all feilds please</div>\r\n            <form action=\"\">\r\n                <input type=\"text\" id=\"nameInput\" placeholder=\"Your Name\" />\r\n                <input type=\"email\" id=\"emailInput\" placeholder=\"Your Email Id\" />\r\n                <textarea name=\"txt\" id=\"txt\" rows=\"15\" placeholder=\"Your Message\"></textarea>\r\n                <button type=\"button\" className=\"btn\" onClick={submit}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst submit = () =>{\r\n    let nameInput = document.getElementById('nameInput');\r\n    let emailInput = document.getElementById('emailInput');\r\n    let txt = document.getElementById('txt');\r\n\r\n    if(nameInput.value && emailInput.value && txt.value){\r\n        alert(\"Succesfully submited\");\r\n    }\r\n    else{\r\n        alert(\"Please fill the respective feilds correctly\");\r\n    }\r\n\r\n    nameInput.value = '';\r\n    emailInput.value = '';\r\n    txt.value = '';    \r\n}\r\nexport default Contact;","import React , {useState} from 'react';\r\n\r\nfunction Home() {\r\n\r\n    const upper= () =>{\r\n        // console.log(\"convert upper case\",words);\r\n        let newWord = words.toUpperCase();\r\n        setWords(newWord);\r\n    }\r\n\r\n    const lower = () =>{\r\n        // console.log(\"lower case converted\");\r\n        let newWord = words.toLowerCase();\r\n        setWords(newWord);\r\n    }\r\n\r\n    const clear = () =>{\r\n        // console.log(\"Clear it\");\r\n        setWords(\"\");\r\n    }\r\n\r\n    const countLetters = () =>{\r\n        let num = 0;\r\n        for(let i = 0; i< words.length ; i++){\r\n            if(words[i] === ' ' || words[i] === '\\n' || words[i] === '-' || words[i] === '/' || words[i] === '.' || words[i] === '_' || words[i] === '^' || words[i] === '*' || words[i] === '(' || words[i] === ')' || words[i] === '!' || words[i] === '=' || words[i] === '+' ){\r\n                continue;\r\n            }\r\n            else{\r\n                num++ ;\r\n            }\r\n        }\r\n        let s = document.getElementById(\"show_number\");\r\n        let c = JSON.parse(num);\r\n        s.innerHTML = c + ' Letter(s)';\r\n\r\n        if(s.style.visibility === 'hidden'){\r\n            s.style.visibility = 'visible';\r\n        }\r\n        else{\r\n            s.style.visibility = 'hidden';\r\n        }\r\n    } \r\n\r\n    const countWords =()=>{\r\n\r\n        // Very very important ,   Main logic\r\n        let num = 0;\r\n        if(document.getElementById('text').value){\r\n            num = words.trim().split(/\\s+/).length;\r\n        }\r\n\r\n        let s = document.getElementById(\"show_number\");\r\n        let c = JSON.parse(num);\r\n        s.innerHTML = c + \" Word(s)\";\r\n        \r\n        if(s.style.visibility === 'hidden'){\r\n            s.style.visibility = 'visible';\r\n        }\r\n        else{\r\n            s.style.visibility = 'hidden';\r\n        }\r\n        // s.classList.toggle(\"action\");\r\n    }\r\n    \r\n    const handleOnChange=(event)=>{\r\n\r\n        setWords(event.target.value);\r\n        // let endTime;\r\n        // count words\r\n        let num = 0;\r\n        if(document.getElementById('text').value){\r\n            num = words.trim().split(/\\s+/).length;\r\n        }\r\n        let c = JSON.parse(num);\r\n\r\n        let speed = document.querySelector('.speed');\r\n\r\n        let time = (1/200) * c;\r\n\r\n        if(time < 1){\r\n            time = (60/200) * c ; \r\n            speed.innerHTML = `${time} sec read`;\r\n        }\r\n        else{\r\n            speed.innerHTML = `${time} min read`;\r\n        }\r\n\r\n        // time taken to read\r\n    }\r\n\r\n    const [words , setWords] = useState(\"\");\r\n\r\n    // wpm\r\n   \r\n\r\n    return (\r\n        <div className=\"data\">\r\n            <h1 className=\"head\">Convert your text easily and precisely</h1>\r\n            <div className=\"speed\"> 0 minute read</div>\r\n            <textarea name=\"text\" id=\"text\" cols=\"150\" rows=\"20\" placeholder=\"Enter text here\" value={words} onChange={handleOnChange}></textarea>   \r\n\r\n            <div id=\"show_number\" ></div>\r\n\r\n            <div className=\"buttons\">\r\n                <button type=\"button\" onClick={upper} >Upper Case</button>\r\n                <button type=\"button\" onClick={lower}>Lower Case</button>\r\n                <button type=\"button\" onClick={countWords}>Words</button>\r\n                <button type=\"button\" onClick={countLetters}>Letters</button>\r\n                <button type=\"button\" onClick={clear}>Clear</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import NavBar from './components/Navbar.js';\r\nimport { Switch, Route ,Redirect} from 'react-router-dom';\r\n\r\nimport About from './components/About';\r\nimport Contact from './components/Contact';\r\nimport Home from './components/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n\r\n      <Route>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/contact\" component={Contact} />\r\n          <Redirect to =\"/\" />\r\n        </Switch>\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}